{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst rawState = {\n  botChatMessage: [\"Hi! I am Technology Mahashay, your chat assistant. You can ask me any questions related to Turtlemint and the products offered by us.\"]\n};\nconst BotChatReducer = createSlice({\n  name: 'BotChatReducer',\n  initialState: rawState,\n  reducers: {\n    askBot: (state, action) => {\n      return {\n        ...state\n      };\n    },\n    askBotResponse: (state, action) => {\n      console.log(action.payload, \"payload\");\n      return {\n        ...state,\n        botChatMessage: [...state.botChatMessage, action.payload]\n      };\n    },\n    pushMessage: (state, action) => {\n      return {\n        ...state,\n        botChatMessage: [...state.botChatMessage, action.payload]\n      };\n    }\n  }\n});\nexport const {\n  askBot,\n  askBotResponse,\n  pushMessage\n} = BotChatReducer.actions;\nexport default BotChatReducer;","map":{"version":3,"names":["createSlice","rawState","botChatMessage","BotChatReducer","name","initialState","reducers","askBot","state","action","askBotResponse","console","log","payload","pushMessage","actions"],"sources":["/Users/avinashpandey/Desktop/Technology Mahashay/src/views/bot/reducer.ts"],"sourcesContent":["import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\nimport { defaultPageInfo } from \"../../__utils/constant\";\n\ninterface BotState {\n    botChatMessage: string[];\n}\n\nconst rawState: BotState = {\n    botChatMessage: [\"Hi! I am Technology Mahashay, your chat assistant. You can ask me any questions related to Turtlemint and the products offered by us.\"],\n}\n\nconst BotChatReducer = createSlice({\n    name: 'BotChatReducer',\n    initialState: rawState,\n    reducers: {\n        askBot: (state: any, action: PayloadAction<any>) => {\n            return { ...state }\n        },\n        askBotResponse: (state: any, action: PayloadAction<any>) => {\n            console.log(action.payload, \"payload\")\n            return { ...state, botChatMessage: [...state.botChatMessage, action.payload] }\n\n        },\n        pushMessage: (state: any, action: PayloadAction<any>) => {\n            return { ...state, botChatMessage:  [...state.botChatMessage, action.payload] }\n        }\n    }\n})\n\nexport const { askBot, askBotResponse, pushMessage } = BotChatReducer.actions;\n\nexport default BotChatReducer;"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAO7D,MAAMC,QAAkB,GAAG;EACvBC,cAAc,EAAE,CAAC,uIAAuI;AAC5J,CAAC;AAED,MAAMC,cAAc,GAAGH,WAAW,CAAC;EAC/BI,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEJ,QAAQ;EACtBK,QAAQ,EAAE;IACNC,MAAM,EAAEA,CAACC,KAAU,EAAEC,MAA0B,KAAK;MAChD,OAAO;QAAE,GAAGD;MAAM,CAAC;IACvB,CAAC;IACDE,cAAc,EAAEA,CAACF,KAAU,EAAEC,MAA0B,KAAK;MACxDE,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,OAAO,EAAE,SAAS,CAAC;MACtC,OAAO;QAAE,GAAGL,KAAK;QAAEN,cAAc,EAAE,CAAC,GAAGM,KAAK,CAACN,cAAc,EAAEO,MAAM,CAACI,OAAO;MAAE,CAAC;IAElF,CAAC;IACDC,WAAW,EAAEA,CAACN,KAAU,EAAEC,MAA0B,KAAK;MACrD,OAAO;QAAE,GAAGD,KAAK;QAAEN,cAAc,EAAG,CAAC,GAAGM,KAAK,CAACN,cAAc,EAAEO,MAAM,CAACI,OAAO;MAAE,CAAC;IACnF;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN,MAAM;EAAEG,cAAc;EAAEI;AAAY,CAAC,GAAGX,cAAc,CAACY,OAAO;AAE7E,eAAeZ,cAAc"},"metadata":{},"sourceType":"module"}