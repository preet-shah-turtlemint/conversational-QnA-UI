{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst rawState = {\n  count: 0,\n  cohortSuccess: '',\n  cohortError: ''\n};\nconst CohortCreationReducer = createSlice({\n  name: 'CohortCreationReducer',\n  initialState: rawState,\n  reducers: {\n    createCohort: (state, action) => {\n      return {\n        ...state\n      };\n    },\n    createCohortSuccess: (state, action) => {\n      return {\n        ...state,\n        cohortSuccess: action.payload\n      };\n    },\n    createCohortError: (state, action) => {\n      return {\n        ...state,\n        cohortError: action.payload\n      };\n    },\n    resetCohort: state => {\n      return rawState;\n    }\n  }\n});\nexport const {\n  createCohort,\n  createCohortSuccess,\n  createCohortError,\n  resetCohort\n} = CohortCreationReducer.actions;\nexport default CohortCreationReducer;","map":{"version":3,"names":["createSlice","rawState","count","cohortSuccess","cohortError","CohortCreationReducer","name","initialState","reducers","createCohort","state","action","createCohortSuccess","payload","createCohortError","resetCohort","actions"],"sources":["/Users/avinashpandey/Desktop/Technology Mahashay/src/views/cohort-creation/reducer.ts"],"sourcesContent":["import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\n\nexport interface CohortCreationState {\n    count: number;\n    cohortSuccess: string;\n    cohortError: string;\n}\n\nconst rawState: CohortCreationState = {\n    count: 0,\n    cohortSuccess: '',\n    cohortError: ''\n}\n\ninterface FetchDataPayload {\n    file: FormData;\n    name: string;\n}\n\n\nconst CohortCreationReducer = createSlice({\n    name: 'CohortCreationReducer',\n    initialState: rawState,\n    reducers: {\n        createCohort: (state: any, action: PayloadAction<any>) => {\n            return { ...state }\n        },\n        createCohortSuccess: (state: any, action: PayloadAction<FetchDataPayload>) => {\n            return { ...state, cohortSuccess: action.payload }\n\n        },\n        createCohortError: (state: any, action: PayloadAction<FetchDataPayload>) => {\n            return { ...state, cohortError: action.payload }\n        },\n\n        resetCohort: (state: any) => {\n            return rawState\n        }\n    }\n})\n\nexport const { createCohort, createCohortSuccess, createCohortError, resetCohort } = CohortCreationReducer.actions;\n\nexport default CohortCreationReducer;"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAQ7D,MAAMC,QAA6B,GAAG;EAClCC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE,EAAE;EACjBC,WAAW,EAAE;AACjB,CAAC;AAQD,MAAMC,qBAAqB,GAAGL,WAAW,CAAC;EACtCM,IAAI,EAAE,uBAAuB;EAC7BC,YAAY,EAAEN,QAAQ;EACtBO,QAAQ,EAAE;IACNC,YAAY,EAAEA,CAACC,KAAU,EAAEC,MAA0B,KAAK;MACtD,OAAO;QAAE,GAAGD;MAAM,CAAC;IACvB,CAAC;IACDE,mBAAmB,EAAEA,CAACF,KAAU,EAAEC,MAAuC,KAAK;MAC1E,OAAO;QAAE,GAAGD,KAAK;QAAEP,aAAa,EAAEQ,MAAM,CAACE;MAAQ,CAAC;IAEtD,CAAC;IACDC,iBAAiB,EAAEA,CAACJ,KAAU,EAAEC,MAAuC,KAAK;MACxE,OAAO;QAAE,GAAGD,KAAK;QAAEN,WAAW,EAAEO,MAAM,CAACE;MAAQ,CAAC;IACpD,CAAC;IAEDE,WAAW,EAAGL,KAAU,IAAK;MACzB,OAAOT,QAAQ;IACnB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ,YAAY;EAAEG,mBAAmB;EAAEE,iBAAiB;EAAEC;AAAY,CAAC,GAAGV,qBAAqB,CAACW,OAAO;AAElH,eAAeX,qBAAqB"},"metadata":{},"sourceType":"module"}