{"ast":null,"code":"var _jsxFileName = \"/Users/avinashpandey/Desktop/Technology Mahashay/src/views/bot/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from '@turtlemint/mint-ui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n`;\n_c = Container;\nconst ChatBot = () => {\n  _s();\n  const [permission, setPermission] = useState(false);\n  const [stream, setStream] = useState(null);\n  const mimeType = \"audio/webm\";\n  const mediaRecorder = useRef(null);\n  const [recordingStatus, setRecordingStatus] = useState(\"inactive\");\n  const [audioChunks, setAudioChunks] = useState([]);\n  const [audio, setAudio] = useState(null);\n  const getMicrophonePermission = async () => {\n    if (\"MediaRecorder\" in window) {\n      try {\n        const streamData = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: false\n        });\n        setPermission(true);\n        setStream(streamData);\n      } catch (err) {\n        alert(err.message);\n      }\n    } else {\n      alert(\"The MediaRecorder API is not supported in your browser.\");\n    }\n  };\n  const startRecording = async () => {\n    setRecordingStatus(\"recording\");\n    //create new Media recorder instance using the stream\n    const media = new MediaRecorder(stream, {\n      type: mimeType\n    });\n    //set the MediaRecorder instance to the mediaRecorder ref\n    mediaRecorder.current = media;\n    //invokes the start method to start the recording process\n    mediaRecorder.current.start();\n    let localAudioChunks = [];\n    mediaRecorder.current.ondataavailable = event => {\n      if (typeof event.data === \"undefined\") return;\n      if (event.data.size === 0) return;\n      localAudioChunks.push(event.data);\n    };\n    setAudioChunks(localAudioChunks);\n  };\n  const stopRecording = () => {\n    setRecordingStatus(\"inactive\");\n    //stops the recording instance\n    mediaRecorder.current.stop();\n    mediaRecorder.current.onstop = () => {\n      //creates a blob file from the audiochunks data\n      const audioBlob = new Blob(audioChunks, {\n        type: mimeType\n      });\n      //creates a playable URL from the blob file.\n      const audioUrl = URL.createObjectURL(audioBlob);\n      setAudio(audioUrl);\n      setAudioChunks([]);\n    };\n  };\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia();\n  }, []);\n  console.log(stream);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n      type: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"send-button\",\n      btnStyle: \"primary\",\n      btnType: \"solid\",\n      icon: \"send\",\n      disabled: trim(text).length === 0,\n      onClick: textEntered,\n      style: {\n        marginTop: '20px',\n        marginLeft: '15px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!permission ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMicrophonePermission,\n        type: \"button\",\n        children: \"Get Microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this) : null, permission && recordingStatus === \"inactive\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        type: \"button\",\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this) : null, recordingStatus === \"recording\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        type: \"button\",\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this) : null, audio ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          src: audio,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          download: true,\n          href: audio,\n          children: \"Download Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 12\n  }, this);\n};\n_s(ChatBot, \"sMZ4J7FDExDUlw6riyFDsmF7IWs=\");\n_c2 = ChatBot;\nexport default ChatBot;\nconst StyledInput = styled.input`\n    height: 30px;\n    margin: 20px;\n    padding: 10px;\n    border: 1px solid green;\n    border-radius: 15px;\n    width: 80%;\n`;\n_c3 = StyledInput;\nconst StyledButton = styled.button`\n    background-color: rgb(75, 200, 75);\n`;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ChatBot\");\n$RefreshReg$(_c3, \"StyledInput\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","Button","jsxDEV","_jsxDEV","Container","div","_c","ChatBot","_s","permission","setPermission","stream","setStream","mimeType","mediaRecorder","recordingStatus","setRecordingStatus","audioChunks","setAudioChunks","audio","setAudio","getMicrophonePermission","window","streamData","navigator","mediaDevices","getUserMedia","video","err","alert","message","startRecording","media","MediaRecorder","type","current","start","localAudioChunks","ondataavailable","event","data","size","push","stopRecording","stop","onstop","audioBlob","Blob","audioUrl","URL","createObjectURL","console","log","children","StyledInput","fileName","_jsxFileName","lineNumber","columnNumber","className","btnStyle","btnType","icon","disabled","trim","text","length","onClick","textEntered","style","marginTop","marginLeft","src","controls","download","href","_c2","input","_c3","StyledButton","button","$RefreshReg$"],"sources":["/Users/avinashpandey/Desktop/Technology Mahashay/src/views/bot/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from '@turtlemint/mint-ui';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n`\n\n\nconst ChatBot = () => {\n\n    const [permission, setPermission] = useState(false);\n    const [stream, setStream] = useState<any>(null);\n    const mimeType = \"audio/webm\";\n    const mediaRecorder = useRef<any>(null);\n    const [recordingStatus, setRecordingStatus] = useState(\"inactive\");\n    const [audioChunks, setAudioChunks] = useState([]);\n    const [audio, setAudio] = useState(null);\n\n\n\n    const getMicrophonePermission = async () => {\n        if (\"MediaRecorder\" in window) {\n            try {\n                const streamData = await navigator.mediaDevices.getUserMedia({\n                    audio: true,\n                    video: false,\n                });\n                setPermission(true);\n                setStream(streamData);\n            } catch (err) {\n                alert(err.message);\n            }\n        } else {\n            alert(\"The MediaRecorder API is not supported in your browser.\");\n        }\n    };\n\n    const startRecording = async () => {\n        setRecordingStatus(\"recording\");\n        //create new Media recorder instance using the stream\n        const media = new MediaRecorder(stream, { type: mimeType });\n        //set the MediaRecorder instance to the mediaRecorder ref\n        mediaRecorder.current = media;\n        //invokes the start method to start the recording process\n        mediaRecorder.current.start();\n        let localAudioChunks = [];\n        mediaRecorder.current.ondataavailable = (event) => {\n            if (typeof event.data === \"undefined\") return;\n            if (event.data.size === 0) return;\n            localAudioChunks.push(event.data);\n        };\n        setAudioChunks(localAudioChunks);\n    };\n\n    const stopRecording = () => {\n        setRecordingStatus(\"inactive\");\n        //stops the recording instance\n        mediaRecorder.current.stop();\n        mediaRecorder.current.onstop = () => {\n            //creates a blob file from the audiochunks data\n            const audioBlob = new Blob(audioChunks, { type: mimeType });\n            //creates a playable URL from the blob file.\n            const audioUrl = URL.createObjectURL(audioBlob);\n            setAudio(audioUrl);\n            setAudioChunks([]);\n        };\n    };\n\n\n    useEffect(() => {\n        navigator.mediaDevices.getUserMedia()\n    }, [])\n\n\n    console.log(stream)\n    return <Container>\n        <StyledInput type=\" \" />\n        <Button\n            className=\"send-button\"\n            btnStyle=\"primary\"\n            btnType=\"solid\"\n            icon=\"send\"\n            disabled={trim(text).length === 0}\n            onClick={textEntered}\n            style={{ marginTop: '20px', marginLeft: '15px' }}\n        />\n        <main>\n            {!permission ? (\n                <button onClick={getMicrophonePermission} type=\"button\">\n                    Get Microphone\n                </button>\n            ) : null}\n            {permission && recordingStatus === \"inactive\" ? (\n                <button onClick={startRecording} type=\"button\">\n                    Start Recording\n                </button>\n            ) : null}\n            {recordingStatus === \"recording\" ? (\n                <button onClick={stopRecording} type=\"button\">\n                    Stop Recording\n                </button>\n            ) : null}\n            {audio ? (\n                <div className=\"audio-container\">\n                    <audio src={audio} controls></audio>\n                    <a download href={audio}>\n                        Download Recording\n                    </a>\n                </div>\n            ) : null}\n        </main>\n\n    </Container>\n}\n\n\nexport default ChatBot;\n\nconst StyledInput = styled.input`\n    height: 30px;\n    margin: 20px;\n    padding: 10px;\n    border: 1px solid green;\n    border-radius: 15px;\n    width: 80%;\n`\nconst StyledButton = styled.button`\n    background-color: rgb(75, 200, 75);\n`"],"mappings":"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"},"metadata":{},"sourceType":"module"}