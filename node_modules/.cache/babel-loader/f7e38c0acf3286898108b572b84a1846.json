{"ast":null,"code":"import { ofType } from \"redux-observable\";\nimport { catchError, map, mergeMap } from \"rxjs/operators\";\nimport { API_CONSTANTS } from \"../../constants/api-contants\";\nimport { post, postFormData } from \"../../__utils/ajax-wrapper\";\nimport { askBot, askBotResponse, chatWithAudio, chatWithAudioSucces } from \"./reducer\";\nimport { Observable } from \"rxjs\";\nexport const AskChabotEpic = (action$, state$) => action$.pipe(ofType(askBot.type), mergeMap(action => {\n  const apiurl = API_CONSTANTS.PROCESS;\n  const text = action.payload;\n  console.log(text, \"pay\");\n  return new Observable(observer => {\n    post(API_CONSTANTS.CAMPAIGN, apiurl, text).pipe(map(response => {\n      if (response.status === 200) {\n        console.log(response, \"epic\");\n        return {\n          type: askBotResponse.type,\n          payload: response.response.output\n        };\n      }\n    }), catchError(error => {\n      return;\n    })).subscribe({\n      next: value => {\n        // handle next value if needed\n        observer.next(value);\n      },\n      error: error => {\n        // handle error if needed\n        observer.error(error);\n      },\n      complete: () => {\n        // handle completion if needed\n        observer.complete();\n      }\n    });\n  });\n}));\n_c = AskChabotEpic;\nexport const ChatWithAudioEpic = (action$, state$) => action$.pipe(ofType(chatWithAudio.type), mergeMap(action => {\n  const apiurl = API_CONSTANTS.PROCESS;\n  console.log(action.payload, \"chatpayload\");\n  const audio = action.payload;\n  return new Observable(observer => {\n    postFormData(API_CONSTANTS.CAMPAIGN, apiurl, audio, {\n      'Content-Type': 'application/json'\n    }).pipe(map(response => {\n      if (response.status === 200) {\n        console.log(response, \"epic\");\n        return {\n          type: chatWithAudioSucces.type,\n          payload: response.response.output\n        };\n      }\n    }), catchError(error => {\n      return;\n    })).subscribe({\n      next: value => {\n        // handle next value if needed\n        observer.next(value);\n      },\n      error: error => {\n        // handle error if needed\n        observer.error(error);\n      },\n      complete: () => {\n        // handle completion if needed\n        observer.complete();\n      }\n    });\n  });\n}));\n_c2 = ChatWithAudioEpic;\nvar _c, _c2;\n$RefreshReg$(_c, \"AskChabotEpic\");\n$RefreshReg$(_c2, \"ChatWithAudioEpic\");","map":{"version":3,"names":["ofType","catchError","map","mergeMap","API_CONSTANTS","post","postFormData","askBot","askBotResponse","chatWithAudio","chatWithAudioSucces","Observable","AskChabotEpic","action$","state$","pipe","type","action","apiurl","PROCESS","text","payload","console","log","observer","CAMPAIGN","response","status","output","error","subscribe","next","value","complete","_c","ChatWithAudioEpic","audio","_c2","$RefreshReg$"],"sources":["/Users/avinashpandey/Desktop/Technology Mahashay/src/views/bot/epics.tsx"],"sourcesContent":["import { Epic, ofType } from \"redux-observable\"\nimport { catchError, map, mergeMap } from \"rxjs/operators\"\nimport { API_CONSTANTS } from \"../../constants/api-contants\"\nimport { post, postFormData } from \"../../__utils/ajax-wrapper\"\nimport { askBot, askBotResponse, chatWithAudio, chatWithAudioSucces  } from \"./reducer\"\nimport { Observable, ObservableInput } from \"rxjs\"\nimport { RootState } from \"../../redux/store\"\n\n\nexport const AskChabotEpic: Epic<any, any, RootState> = (action$, state$) => action$.pipe(\n    ofType<any, any>(askBot.type),\n    mergeMap((action): ObservableInput<any> => {\n        const apiurl = API_CONSTANTS.PROCESS;\n        const text = action.payload\n        console.log(text, \"pay\")\n        return new Observable<any>((observer) => {\n            post(API_CONSTANTS.CAMPAIGN, apiurl, text)\n                .pipe(\n                    map((response: any) => {\n                        if (response.status === 200) {\n                            console.log(response, \"epic\")\n                            return { type: askBotResponse.type, payload: response.response.output }\n                        }\n                    }),\n                    catchError((error): any => {\n                        return \n\n                    })\n                )\n                .subscribe({\n                    next: (value) => {\n                        // handle next value if needed\n                        observer.next(value);\n                    },\n                    error: (error) => {\n                        // handle error if needed\n                        observer.error(error);\n                    },\n                    complete: () => {\n                        // handle completion if needed\n                        observer.complete();\n                    },\n                });\n        });\n\n    })\n)\n\nexport const ChatWithAudioEpic: Epic<any, any, RootState> = (action$, state$) => action$.pipe(\n    ofType<any, any>(chatWithAudio.type),\n    mergeMap((action): ObservableInput<any> => {\n        const apiurl = API_CONSTANTS.PROCESS;\n        console.log(action.payload, \"chatpayload\")\n        const audio = action.payload\n        return new Observable<any>((observer) => {\n            postFormData(API_CONSTANTS.CAMPAIGN, apiurl, audio, {\n                'Content-Type': 'application/json'\n            })\n                .pipe(\n                    map((response: any) => {\n                        if (response.status === 200) {\n                            console.log(response, \"epic\")\n                            return { type: chatWithAudioSucces.type, payload: response.response.output }\n                        }\n                    }),\n                    catchError((error): any => {\n                        return \n\n                    })\n                )\n                .subscribe({\n                    next: (value) => {\n                        // handle next value if needed\n                        observer.next(value);\n                    },\n                    error: (error) => {\n                        // handle error if needed\n                        observer.error(error);\n                    },\n                    complete: () => {\n                        // handle completion if needed\n                        observer.complete();\n                    },\n                });\n        });\n\n    })\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}