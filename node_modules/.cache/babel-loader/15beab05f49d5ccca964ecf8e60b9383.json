{"ast":null,"code":"import { ofType } from \"redux-observable\";\nimport { catchError, map, mergeMap } from \"rxjs/operators\";\nimport { API_CONSTANTS } from \"../../constants/api-contants\";\nimport { postFormData } from \"../../__utils/ajax-wrapper\";\nimport { createCohort, createCohortError, createCohortSuccess } from \"./reducer\";\nimport { Observable } from \"rxjs\";\nexport const CohortCreationEpic = (action$, state$) => action$.pipe(ofType(createCohort.type), mergeMap(action => {\n  const apiurl = API_CONSTANTS.CREATE_CAMPAIGN;\n  const val = action.payload;\n  return new Observable(observer => {\n    postFormData(API_CONSTANTS.CAMPAIGN, apiurl, val).pipe(map(response => {\n      if (response.status === 200) {\n        return {\n          type: createCohortSuccess.type,\n          payload: response.response.data\n        };\n      }\n    }), catchError(error => {\n      return {\n        type: createCohortError.type,\n        payload: error\n      };\n    })).subscribe({\n      next: value => {\n        // handle next value if needed\n        observer.next(value);\n      },\n      error: error => {\n        // handle error if needed\n        observer.error(error);\n      },\n      complete: () => {\n        // handle completion if needed\n        observer.complete();\n      }\n    });\n  });\n}));\n_c = CohortCreationEpic;\nvar _c;\n$RefreshReg$(_c, \"CohortCreationEpic\");","map":{"version":3,"names":["ofType","catchError","map","mergeMap","API_CONSTANTS","postFormData","createCohort","createCohortError","createCohortSuccess","Observable","CohortCreationEpic","action$","state$","pipe","type","action","apiurl","CREATE_CAMPAIGN","val","payload","observer","CAMPAIGN","response","status","data","error","subscribe","next","value","complete","_c","$RefreshReg$"],"sources":["/Users/avinashpandey/Desktop/Technology Mahashay/src/views/cohort-creation/epics.tsx"],"sourcesContent":["import { Epic, ofType } from \"redux-observable\"\nimport { catchError, map, mergeMap } from \"rxjs/operators\"\nimport { API_CONSTANTS } from \"../../constants/api-contants\"\nimport { postFormData } from \"../../__utils/ajax-wrapper\"\nimport { createCohort, createCohortError, createCohortSuccess } from \"./reducer\"\nimport { Observable, ObservableInput } from \"rxjs\"\nimport { RootState } from \"../../redux/store\"\n\nexport const CohortCreationEpic: Epic<any, any, RootState> = (action$, state$) => action$.pipe(\n    ofType<any, any>(createCohort.type),\n    mergeMap((action): ObservableInput<any> => {\n        const apiurl = API_CONSTANTS.CREATE_CAMPAIGN;\n        const val = action.payload\n        return new Observable<any>((observer) => {\n            postFormData(API_CONSTANTS.CAMPAIGN, apiurl, val)\n                .pipe(\n                    map((response: any) => {\n                        if (response.status === 200) {\n                            return { type: createCohortSuccess.type, payload: response.response.data }\n                        }\n                    }),\n                    catchError((error): any => {\n                        return { type: createCohortError.type, payload: error }\n\n                    })\n                )\n                .subscribe({\n                    next: (value) => {\n                        // handle next value if needed\n                        observer.next(value);\n                    },\n                    error: (error) => {\n                        // handle error if needed\n                        observer.error(error);\n                    },\n                    complete: () => {\n                        // handle completion if needed\n                        observer.complete();\n                    },\n                });\n        });\n\n    })\n)\n"],"mappings":"AAAA,SAAeA,MAAM,QAAQ,kBAAkB;AAC/C,SAASC,UAAU,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC1D,SAASC,aAAa,QAAQ,8BAA8B;AAC5D,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,YAAY,EAAEC,iBAAiB,EAAEC,mBAAmB,QAAQ,WAAW;AAChF,SAASC,UAAU,QAAyB,MAAM;AAGlD,OAAO,MAAMC,kBAA6C,GAAGA,CAACC,OAAO,EAAEC,MAAM,KAAKD,OAAO,CAACE,IAAI,CAC1Fb,MAAM,CAAWM,YAAY,CAACQ,IAAI,CAAC,EACnCX,QAAQ,CAAEY,MAAM,IAA2B;EACvC,MAAMC,MAAM,GAAGZ,aAAa,CAACa,eAAe;EAC5C,MAAMC,GAAG,GAAGH,MAAM,CAACI,OAAO;EAC1B,OAAO,IAAIV,UAAU,CAAOW,QAAQ,IAAK;IACrCf,YAAY,CAACD,aAAa,CAACiB,QAAQ,EAAEL,MAAM,EAAEE,GAAG,CAAC,CAC5CL,IAAI,CACDX,GAAG,CAAEoB,QAAa,IAAK;MACnB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzB,OAAO;UAAET,IAAI,EAAEN,mBAAmB,CAACM,IAAI;UAAEK,OAAO,EAAEG,QAAQ,CAACA,QAAQ,CAACE;QAAK,CAAC;MAC9E;IACJ,CAAC,CAAC,EACFvB,UAAU,CAAEwB,KAAK,IAAU;MACvB,OAAO;QAAEX,IAAI,EAAEP,iBAAiB,CAACO,IAAI;QAAEK,OAAO,EAAEM;MAAM,CAAC;IAE3D,CAAC,CACL,CAAC,CACAC,SAAS,CAAC;MACPC,IAAI,EAAGC,KAAK,IAAK;QACb;QACAR,QAAQ,CAACO,IAAI,CAACC,KAAK,CAAC;MACxB,CAAC;MACDH,KAAK,EAAGA,KAAK,IAAK;QACd;QACAL,QAAQ,CAACK,KAAK,CAACA,KAAK,CAAC;MACzB,CAAC;MACDI,QAAQ,EAAEA,CAAA,KAAM;QACZ;QACAT,QAAQ,CAACS,QAAQ,CAAC,CAAC;MACvB;IACJ,CAAC,CAAC;EACV,CAAC,CAAC;AAEN,CAAC,CACL,CAAC;AAAAC,EAAA,GAnCYpB,kBAA6C;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}