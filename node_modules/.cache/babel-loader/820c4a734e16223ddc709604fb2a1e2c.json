{"ast":null,"code":"import { ofType } from \"redux-observable\";\nimport { catchError, map, mergeMap } from \"rxjs/operators\";\nimport { API_CONSTANTS } from \"../../constants/api-contants\";\nimport { post } from \"../../__utils/ajax-wrapper\";\nimport { askBot, askBotResponse } from \"./reducer\";\nimport { Observable } from \"rxjs\";\nexport const AskChabotEpic = (action$, state$) => action$.pipe(ofType(askBot.type), mergeMap(action => {\n  const apiurl = API_CONSTANTS.PROCESS;\n  const text = action.payload;\n  return new Observable(observer => {\n    post(API_CONSTANTS.CAMPAIGN, apiurl, text).pipe(map(response => {\n      if (response.status === 200) {\n        console.log(response, \"epic\");\n        return {\n          type: askBotResponse.type,\n          payload: response.response.data\n        };\n      }\n    }), catchError(error => {\n      return;\n    })).subscribe({\n      next: value => {\n        // handle next value if needed\n        observer.next(value);\n      },\n      error: error => {\n        // handle error if needed\n        observer.error(error);\n      },\n      complete: () => {\n        // handle completion if needed\n        observer.complete();\n      }\n    });\n  });\n}));\n_c = AskChabotEpic;\nvar _c;\n$RefreshReg$(_c, \"AskChabotEpic\");","map":{"version":3,"names":["ofType","catchError","map","mergeMap","API_CONSTANTS","post","askBot","askBotResponse","Observable","AskChabotEpic","action$","state$","pipe","type","action","apiurl","PROCESS","text","payload","observer","CAMPAIGN","response","status","console","log","data","error","subscribe","next","value","complete","_c","$RefreshReg$"],"sources":["/Users/avinashpandey/Desktop/Technology Mahashay/src/views/bot/epics.tsx"],"sourcesContent":["import { Epic, ofType } from \"redux-observable\"\nimport { catchError, map, mergeMap } from \"rxjs/operators\"\nimport { API_CONSTANTS } from \"../../constants/api-contants\"\nimport { post } from \"../../__utils/ajax-wrapper\"\nimport { askBot, askBotResponse  } from \"./reducer\"\nimport { Observable, ObservableInput } from \"rxjs\"\nimport { RootState } from \"../../redux/store\"\n\n\nexport const AskChabotEpic: Epic<any, any, RootState> = (action$, state$) => action$.pipe(\n    ofType<any, any>(askBot.type),\n    mergeMap((action): ObservableInput<any> => {\n        const apiurl = API_CONSTANTS.PROCESS;\n        const text = action.payload\n        return new Observable<any>((observer) => {\n            post(API_CONSTANTS.CAMPAIGN, apiurl, text)\n                .pipe(\n                    map((response: any) => {\n                        if (response.status === 200) {\n                            console.log(response, \"epic\")\n                            return { type: askBotResponse.type, payload: response.response.data }\n                        }\n                    }),\n                    catchError((error): any => {\n                        return \n\n                    })\n                )\n                .subscribe({\n                    next: (value) => {\n                        // handle next value if needed\n                        observer.next(value);\n                    },\n                    error: (error) => {\n                        // handle error if needed\n                        observer.error(error);\n                    },\n                    complete: () => {\n                        // handle completion if needed\n                        observer.complete();\n                    },\n                });\n        });\n\n    })\n)\n"],"mappings":"AAAA,SAAeA,MAAM,QAAQ,kBAAkB;AAC/C,SAASC,UAAU,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC1D,SAASC,aAAa,QAAQ,8BAA8B;AAC5D,SAASC,IAAI,QAAQ,4BAA4B;AACjD,SAASC,MAAM,EAAEC,cAAc,QAAS,WAAW;AACnD,SAASC,UAAU,QAAyB,MAAM;AAIlD,OAAO,MAAMC,aAAwC,GAAGA,CAACC,OAAO,EAAEC,MAAM,KAAKD,OAAO,CAACE,IAAI,CACrFZ,MAAM,CAAWM,MAAM,CAACO,IAAI,CAAC,EAC7BV,QAAQ,CAAEW,MAAM,IAA2B;EACvC,MAAMC,MAAM,GAAGX,aAAa,CAACY,OAAO;EACpC,MAAMC,IAAI,GAAGH,MAAM,CAACI,OAAO;EAC3B,OAAO,IAAIV,UAAU,CAAOW,QAAQ,IAAK;IACrCd,IAAI,CAACD,aAAa,CAACgB,QAAQ,EAAEL,MAAM,EAAEE,IAAI,CAAC,CACrCL,IAAI,CACDV,GAAG,CAAEmB,QAAa,IAAK;MACnB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzBC,OAAO,CAACC,GAAG,CAACH,QAAQ,EAAE,MAAM,CAAC;QAC7B,OAAO;UAAER,IAAI,EAAEN,cAAc,CAACM,IAAI;UAAEK,OAAO,EAAEG,QAAQ,CAACA,QAAQ,CAACI;QAAK,CAAC;MACzE;IACJ,CAAC,CAAC,EACFxB,UAAU,CAAEyB,KAAK,IAAU;MACvB;IAEJ,CAAC,CACL,CAAC,CACAC,SAAS,CAAC;MACPC,IAAI,EAAGC,KAAK,IAAK;QACb;QACAV,QAAQ,CAACS,IAAI,CAACC,KAAK,CAAC;MACxB,CAAC;MACDH,KAAK,EAAGA,KAAK,IAAK;QACd;QACAP,QAAQ,CAACO,KAAK,CAACA,KAAK,CAAC;MACzB,CAAC;MACDI,QAAQ,EAAEA,CAAA,KAAM;QACZ;QACAX,QAAQ,CAACW,QAAQ,CAAC,CAAC;MACvB;IACJ,CAAC,CAAC;EACV,CAAC,CAAC;AAEN,CAAC,CACL,CAAC;AAAAC,EAAA,GApCYtB,aAAwC;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}