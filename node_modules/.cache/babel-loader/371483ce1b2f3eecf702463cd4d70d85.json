{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { createEpicMiddleware } from 'redux-observable';\nimport rootReducer from '../root-reducer';\nimport rootEpic from '../root-epic';\nconst epicMiddleware = createEpicMiddleware();\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [...getDefaultMiddleware({\n    thunk: false,\n    serializableCheck: false\n  }), epicMiddleware]\n});\nepicMiddleware.run(rootEpic);\nexport default store;","map":{"version":3,"names":["configureStore","getDefaultMiddleware","createEpicMiddleware","rootReducer","rootEpic","epicMiddleware","store","reducer","middleware","thunk","serializableCheck","run"],"sources":["/Users/avinashpandey/Desktop/Technology Mahashay/src/redux/store.ts"],"sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { Epic, createEpicMiddleware } from 'redux-observable';\nimport rootReducer from '../root-reducer';\nimport rootEpic from '../root-epic';\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [ ...getDefaultMiddleware({ thunk: false, serializableCheck: false }), epicMiddleware],\n});\n\nepicMiddleware.run(rootEpic as Epic);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\n\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,oBAAoB,QAAQ,kBAAkB;AACvE,SAAeC,oBAAoB,QAAQ,kBAAkB;AAC7D,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,QAAQ,MAAM,cAAc;AAEnC,MAAMC,cAAc,GAAGH,oBAAoB,CAAC,CAAC;AAE7C,MAAMI,KAAK,GAAGN,cAAc,CAAC;EAC3BO,OAAO,EAAEJ,WAAW;EACpBK,UAAU,EAAE,CAAE,GAAGP,oBAAoB,CAAC;IAAEQ,KAAK,EAAE,KAAK;IAAEC,iBAAiB,EAAE;EAAM,CAAC,CAAC,EAAEL,cAAc;AACnG,CAAC,CAAC;AAEFA,cAAc,CAACM,GAAG,CAACP,QAAgB,CAAC;AAOpC,eAAeE,KAAK"},"metadata":{},"sourceType":"module"}