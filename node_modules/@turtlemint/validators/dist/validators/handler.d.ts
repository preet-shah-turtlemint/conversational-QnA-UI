import { ISingleParamFuns, IMultiParamFuns } from "../interfacepool";
export interface IValidationObj {
    name: keyof (ISingleParamFuns & IMultiParamFuns);
    message?: string;
    customHandler?: (value: any) => boolean;
    expression?: string;
    maxValue?: number;
    minValue?: number;
    minLength?: number;
    maxLength?: number;
    multiple?: number;
}
export declare type IValidationArray = IValidationObj[] | (keyof ISingleParamFuns)[];
export interface IValidation {
    isValid: boolean;
    message: string;
}
export declare const validationHandler: (value: string | number, validationArray: IValidationArray) => IValidation;
export default validationHandler;
