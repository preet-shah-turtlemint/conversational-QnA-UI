"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatePicker = void 0;
var React = __importStar(require("react"));
var moment_1 = __importDefault(require("moment"));
var react_datepicker_1 = __importDefault(require("react-datepicker"));
var header_1 = __importDefault(require("./header"));
var styled_components_1 = __importStar(require("styled-components"));
var app_1 = require("../app");
var input_1 = __importDefault(require("../input"));
require("react-datepicker/dist/react-datepicker.css");
var validators_1 = require("@turtlemint/validators");
var colors_1 = __importDefault(require("../__utils/colors"));
exports.DatePicker = React.forwardRef(function (_a, ref) {
    var name = _a.name, _b = _a.value, value = _b === void 0 ? "" : _b, _c = _a.minDate, minDate = _c === void 0 ? moment_1.default().subtract(10, "years") : _c, _d = _a.maxDate, maxDate = _d === void 0 ? moment_1.default().add(10, "years") : _d, onChange = _a.onChange, disabled = _a.disabled, headerStyles = _a.headerStyles, navigationStyles = _a.navigationStyles, _e = _a.dateFormat, dateFormat = _e === void 0 ? "DD/MM/YYYY" : _e, style = _a.style, block = _a.block, _f = _a.validations, validations = _f === void 0 ? [] : _f, _g = _a.error, error = _g === void 0 ? false : _g, _h = _a.customInput, customInput = _h === void 0 ? CalendarInput : _h, _j = _a.theme, theme = _j === void 0 ? colors_1.default : _j;
    var finalTheme = __assign(__assign({}, colors_1.default), theme);
    var valueToConsume = value
        ? typeof value === "string"
            ? moment_1.default(value, dateFormat)
            : value
        : null;
    var CustomInput = customInput;
    var handleDateChange = function (date) {
        onChange &&
            onChange(moment_1.default(date).format(dateFormat), name);
    };
    var formattedValue = valueToConsume
        ? valueToConsume.format(dateFormat)
        : "";
    // Exposed public function for validation check
    React.useImperativeHandle(ref, function () { return ({
        isValid: function () {
            var validationObj = validators_1.validationHandler(formattedValue, validations);
            return validationObj.isValid;
        }
    }); });
    return (React.createElement(DatePickerWrapper, { style: style, block: block, theme: finalTheme },
        React.createElement(react_datepicker_1.default, { renderCustomHeader: function (props) { return (React.createElement(header_1.default, { date: props.date, changeYear: props.changeYear, changeMonth: props.changeMonth, decreaseMonth: props.decreaseMonth, increaseMonth: props.increaseMonth, prevMonthButtonDisabled: props.prevMonthButtonDisabled, nextMonthButtonDisabled: props.nextMonthButtonDisabled, minDate: minDate, maxDate: maxDate, headerStyles: headerStyles, navigationStyles: navigationStyles })); }, selected: formattedValue
                ? moment_1.default(formattedValue, dateFormat).toDate()
                : null, onChange: function (date) { return handleDateChange(date); }, minDate: minDate.toDate(), maxDate: maxDate.toDate(), customInput: React.createElement(CustomInput, { disable: disabled, dateFormat: dateFormat, value: formattedValue, error: error, theme: finalTheme }) })));
});
var CalendarInput = React.forwardRef(function (_a, ref) {
    var value = _a.value, onClick = _a.onClick, disable = _a.disable, dateFormat = _a.dateFormat, error = _a.error;
    var formattedValue = value
        ? moment_1.default(value, "MM/DD/YYYY").format(dateFormat)
        : "";
    return (React.createElement("div", { ref: ref },
        React.createElement(input_1.default, { type: "text", placeholder: "Enter text", value: formattedValue, onClick: onClick, disabled: disable, size: "small", block: true, error: error, icon: "calendar", iconPosition: "right", iconStyle: { height: "100%", width: "4%" } })));
});
exports.DatePicker.defaultProps = {
    value: moment_1.default(),
    minDate: moment_1.default().subtract(10, "years"),
    maxDate: moment_1.default().add(10, "years"),
    disabled: false
};
var DatePickerWrapper = styled_components_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n\t", ";\n\twidth: ", ";\n\t.react-datepicker-wrapper {\n\t\twidth: 100%;\n\t}\n\t.react-datepicker__input-container input {\n\t\tpadding-top: 12px;\n\t\tpadding-bottom: 12px;\n\t}\n\t.react-datepicker {\n\t\tpadding: 3px;\n\t}\n\n\t.react-datepicker__month {\n\t\tmargin: 0px;\n\t}\n\t.react-datepicker__day-names div {\n\t\tpadding: 2px;\n\t\tfont-weight: bold;\n\t}\n\t.react-datepicker__header {\n\t\tpadding-top: 1px;\n\t\tbackground-color: white;\n\t\tborder-bottom: 0px;\n\t}\n\n\t.react-datepicker__day-name {\n\t\tfont-weight: bold !important;\n\t\tcolor: #475577 !important;\n\t}\n\n\t.react-datepicker__day {\n\t\tbackground: #eff3f6;\n\t\tpadding: 2px;\n\t\tborder-radius: 3px;\n\t\tfont-weight: normal;\n\t}\n\t.react-datepicker__day:hover {\n\t\tbackground: ", "\n\t\tborder-radius: 3px;\n\t}\n\n\t.react-datepicker__day--selected {\n\t\tcolor: white;\n\t\tbackground: ", ";\n\t\tborder-radius: 3px;\n\t\tfont-weight: normal;\n\t}\n\n\t.react-datepicker__day--selected:hover {\n\t\tbackground: ", ";\n\t}\n\n\t.react-datepicker__day--disabled:hover {\n\t\tbackground-color: transparent;\n\t}\n\n\t.react-datepicker__day--outside-month {\n\t\tvisibility: hidden;\n\t}\n\n\t.react-datepicker-popper[data-placement^=\"bottom\"]\n\t\t.react-datepicker__triangle {\n\t\tborder-top: none;\n\t\tborder-bottom-color: white;\n\t}\n\n\t.react-datepicker-popper * {\n\t\tbox-sizing: unset;\n\t}\n\n\t.react-datepicker__day--keyboard-selected {\n\t\tcolor: black;\n\t}\n"], ["\n\t", ";\n\twidth: ", ";\n\t.react-datepicker-wrapper {\n\t\twidth: 100%;\n\t}\n\t.react-datepicker__input-container input {\n\t\tpadding-top: 12px;\n\t\tpadding-bottom: 12px;\n\t}\n\t.react-datepicker {\n\t\tpadding: 3px;\n\t}\n\n\t.react-datepicker__month {\n\t\tmargin: 0px;\n\t}\n\t.react-datepicker__day-names div {\n\t\tpadding: 2px;\n\t\tfont-weight: bold;\n\t}\n\t.react-datepicker__header {\n\t\tpadding-top: 1px;\n\t\tbackground-color: white;\n\t\tborder-bottom: 0px;\n\t}\n\n\t.react-datepicker__day-name {\n\t\tfont-weight: bold !important;\n\t\tcolor: #475577 !important;\n\t}\n\n\t.react-datepicker__day {\n\t\tbackground: #eff3f6;\n\t\tpadding: 2px;\n\t\tborder-radius: 3px;\n\t\tfont-weight: normal;\n\t}\n\t.react-datepicker__day:hover {\n\t\tbackground: ", "\n\t\tborder-radius: 3px;\n\t}\n\n\t.react-datepicker__day--selected {\n\t\tcolor: white;\n\t\tbackground: ", ";\n\t\tborder-radius: 3px;\n\t\tfont-weight: normal;\n\t}\n\n\t.react-datepicker__day--selected:hover {\n\t\tbackground: ", ";\n\t}\n\n\t.react-datepicker__day--disabled:hover {\n\t\tbackground-color: transparent;\n\t}\n\n\t.react-datepicker__day--outside-month {\n\t\tvisibility: hidden;\n\t}\n\n\t.react-datepicker-popper[data-placement^=\"bottom\"]\n\t\t.react-datepicker__triangle {\n\t\tborder-top: none;\n\t\tborder-bottom-color: white;\n\t}\n\n\t.react-datepicker-popper * {\n\t\tbox-sizing: unset;\n\t}\n\n\t.react-datepicker__day--keyboard-selected {\n\t\tcolor: black;\n\t}\n"])), app_1.GlobalStyles, function (_a) {
    var block = _a.block;
    return (block ? "100%" : "328px");
}, function (_a) {
    var theme = _a.theme;
    return theme.PRIMARY_LIGHT;
}, function (_a) {
    var theme = _a.theme;
    return theme.PRIMARY;
}, function (_a) {
    var theme = _a.theme;
    return theme.PRIMARY;
});
exports.default = styled_components_1.withTheme(exports.DatePicker);
var templateObject_1;
//# sourceMappingURL=index.js.map