import * as React from "react";
import { SelectedOption, OptionProps } from "./dropdown";
import { ChangeHandler, ITheme } from "../__utils/type";
import { SelectDataProps } from "../__utils/fetch-data-json";
import { IValidationArray } from "@turtlemint/validators";
interface SelectProps {
    name?: string;
    /** current value  */
    value?: any;
    /** show placeholder */
    placeholder?: string;
    /** callback for the change handler */
    onChange?: ChangeHandler<SelectedOption>;
    options?: SelectedOption[];
    data?: Omit<SelectDataProps, "displayArrKey" | "valueArrKey">;
    /** callback for the blur handler */
    onBlur?: (option: SelectedOption) => void;
    /** full width select */
    block?: boolean;
    disabled?: boolean;
    /** Wrapper styles */
    style?: React.CSSProperties;
    /** Select CTA styles */
    innerStyle?: React.CSSProperties;
    dropdownStyle?: React.CSSProperties;
    displayKey?: string;
    valueKey?: string;
    /** Group codes linked with options */
    codeKey?: string;
    groups?: SelectedOption[];
    openInModal?: boolean;
    validations?: IValidationArray;
    error?: boolean;
    optionJSX?: React.FC<OptionProps>;
    radioOption?: boolean;
    modalTitle?: string;
    listStyle?: React.CSSProperties;
    theme?: ITheme;
}
export declare const Select: React.ForwardRefExoticComponent<SelectProps & React.RefAttributes<any>>;
interface SelectCTAProps {
    value: any;
    placeholder?: string;
    showArrow?: boolean;
    open?: boolean;
    disabled?: boolean;
    onClick?: () => void;
    style?: React.CSSProperties;
    displayKey: string;
    block?: boolean;
    theme?: ITheme;
}
export declare const SelectCTA: ({ value, placeholder, showArrow, open, disabled, onClick, style, displayKey, block, theme }: SelectCTAProps) => JSX.Element;
export declare const SelectWrapper: import("styled-components").StyledComponent<"div", any, {
    block: boolean;
    name?: string | undefined;
    disabled?: boolean | undefined;
    error: boolean;
    theme: ITheme;
}, never>;
export declare const StyledSelectCTA: import("styled-components").StyledComponent<"div", any, {
    disabled?: boolean | undefined;
    block: boolean;
    theme: ITheme;
}, never>;
declare const _default;
export default _default;
