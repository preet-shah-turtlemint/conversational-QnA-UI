"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StyledSelectCTA = exports.SelectWrapper = exports.SelectCTA = exports.Select = void 0;
var React = __importStar(require("react"));
var styled_components_1 = __importStar(require("styled-components"));
var dropdown_1 = __importDefault(require("./dropdown"));
var icon_1 = __importDefault(require("../icon"));
var colors_1 = __importDefault(require("../__utils/colors"));
var app_1 = require("../app");
var fetch_data_json_1 = __importDefault(require("../__utils/fetch-data-json"));
var modal_1 = __importDefault(require("../modal"));
var typography_1 = require("../typography");
var validators_1 = require("@turtlemint/validators");
var type_check_1 = require("../__utils/type-check");
var radio_group_1 = require("../radio-group");
// Default for Modals
var el = document.createElement("div");
el.setAttribute("id", "modal-root");
document.body.append(el);
exports.Select = React.forwardRef(function (_a, ref) {
    var _b;
    var name = _a.name, value = _a.value, _c = _a.placeholder, placeholder = _c === void 0 ? "Select one..." : _c, _d = _a.onChange, onChange = _d === void 0 ? function () { } : _d, options = _a.options, data = _a.data, _e = _a.onBlur, onBlur = _e === void 0 ? function () { } : _e, _f = _a.block, block = _f === void 0 ? false : _f, _g = _a.disabled, disabled = _g === void 0 ? false : _g, style = _a.style, innerStyle = _a.innerStyle, dropdownStyle = _a.dropdownStyle, _h = _a.displayKey, displayKey = _h === void 0 ? "text" : _h, _j = _a.valueKey, valueKey = _j === void 0 ? "value" : _j, _k = _a.codeKey, codeKey = _k === void 0 ? "code" : _k, groups = _a.groups, _l = _a.openInModal, openInModal = _l === void 0 ? false : _l, _m = _a.validations, validations = _m === void 0 ? [] : _m, _o = _a.error, error = _o === void 0 ? false : _o, optionJSX = _a.optionJSX, _p = _a.radioOption, radioOption = _p === void 0 ? false : _p, _q = _a.modalTitle, modalTitle = _q === void 0 ? placeholder : _q, listStyle = _a.listStyle, _r = _a.theme, theme = _r === void 0 ? colors_1.default : _r;
    var finalTheme = __assign(__assign({}, colors_1.default), theme);
    var selectEl = React.useRef(null);
    var _s = React.useState(false), open = _s[0], setOpen = _s[1];
    var valueRef = React.useRef(value);
    // To render RadioOption when flag is true
    var OptionJSX = radioOption ? RadioOption : optionJSX;
    // This function will cross-check the prop's value against options list to check whether its exists in options else will set it as `NULL`
    var setFilteredValue = function (options) {
        // Extrating the exact-value from prop's value
        var valueToCheck = type_check_1._isObject(valueRef.current)
            ? valueRef.current[valueKey]
            : valueRef.current;
        // Setting value, if values exit in option list else will re-set it as NULL
        valueRef.current =
            options.filter(function (option) {
                return option[valueKey] == valueToCheck;
            })[0] || null;
    };
    // Setting value initially
    if (options)
        setFilteredValue(options);
    var _t = React.useState({
        isValid: true,
        message: ""
    }), validationState = _t[0], updateValidationState = _t[1];
    var handleValidation = function (updatedValue) {
        var validationObj = validators_1.validationHandler(updatedValue, validations);
        updateValidationState(__assign({}, validationObj));
    };
    var isValid = function () {
        var currentValue = valueRef.current;
        var validationObj = validators_1.validationHandler(currentValue, validations);
        updateValidationState(__assign({}, validationObj));
        return validationObj.isValid;
    };
    // Exposed public function for validation check
    React.useImperativeHandle(ref, function () { return ({
        isValid: isValid
    }); });
    var handleSelect = function (option) {
        var node = selectEl.current;
        node ? node.blur() : null;
        onBlur(option);
        onChange(option, name, option[valueKey]);
        handleValidation(option);
        setOpen(false);
        valueRef.current = option;
    };
    var _u = React.useState([
        (_b = {}, _b[displayKey] = "", _b[valueKey] = "", _b)
    ]), list = _u[0], setList = _u[1];
    var _v = React.useState(false), loading = _v[0], setLoading = _v[1];
    React.useEffect(function () {
        // Run this effect only when data object is present
        //  and open is true
        if (data && open) {
            setLoading(true);
            fetch_data_json_1.default(__assign(__assign({}, data), { displayArrKey: displayKey, valueArrKey: valueKey })).then(function (response) {
                setList(response);
                setFilteredValue(response);
                setLoading(false);
            });
        }
    }, [open]);
    var handleBlur = function () {
        setOpen(false);
        onBlur(valueRef.current);
    };
    var render = function () {
        if (!open)
            return null;
        if (data)
            return (React.createElement(dropdown_1.default, { loading: loading, onSelect: handleSelect, options: list, displayKey: displayKey, valueKey: valueKey, groups: groups, codeKey: codeKey, openInModal: openInModal, OptionJSX: OptionJSX, selectedValue: valueRef.current, listStyle: listStyle, theme: finalTheme }));
        return (React.createElement(dropdown_1.default, { loading: loading, options: options, onSelect: handleSelect, style: dropdownStyle, displayKey: displayKey, valueKey: valueKey, groups: groups, codeKey: codeKey, openInModal: openInModal, OptionJSX: OptionJSX, selectedValue: valueRef.current, listStyle: listStyle, theme: finalTheme }));
    };
    var dropdownJSX = render();
    return (React.createElement(exports.SelectWrapper, { ref: selectEl, name: name, block: block, tabIndex: 0, disabled: disabled, onBlur: handleBlur, style: style, error: error ? !validationState.isValid : false, theme: finalTheme },
        React.createElement(exports.SelectCTA, { open: open, value: valueRef.current, placeholder: placeholder, showArrow: true, disabled: disabled, onClick: function () { return setOpen(!open); }, style: innerStyle, displayKey: displayKey, block: block, theme: finalTheme }),
        openInModal
            ? //	Open drop-down in Modal - is heavily usefull in mobile
                open && (React.createElement(modal_1.default, { header: true, footer: false, visible: true, container: el, title: modalTitle, bodyStyle: { padding: "0px" }, iconColor: "black", headerStyle: {
                        background: "" + finalTheme.HEADER_BACKGROUND,
                        fontSize: "16px"
                    }, headerTitleStyle: {
                        color: "" + finalTheme.WHITE,
                        fontSize: "16px"
                    } }, dropdownJSX))
            : //  Default drop-down opening
                dropdownJSX,
        error && (React.createElement("div", { style: { marginTop: "7px" } },
            React.createElement(typography_1.Text, { textType: "danger", text: validationState.message })))));
});
var ArrowToggle = function (_a) {
    var open = _a.open, theme = _a.theme;
    return (React.createElement(React.Fragment, null, open ? (React.createElement(icon_1.default, { name: "keyboard_arrow_up", size: 24, color: theme.GREY2 })) : (React.createElement(icon_1.default, { name: "keyboard_arrow_down", size: 24, color: theme.GREY2 }))));
};
exports.SelectCTA = function (_a) {
    var value = _a.value, placeholder = _a.placeholder, _b = _a.showArrow, showArrow = _b === void 0 ? false : _b, open = _a.open, _c = _a.disabled, disabled = _c === void 0 ? false : _c, onClick = _a.onClick, style = _a.style, displayKey = _a.displayKey, _d = _a.block, block = _d === void 0 ? false : _d, _e = _a.theme, theme = _e === void 0 ? colors_1.default : _e;
    var finalTheme = __assign(__assign({}, colors_1.default), theme);
    var displayValue;
    var handleSelectCTAClick = function () {
        onClick ? onClick() : null;
    };
    if (typeof value === "object" &&
        value instanceof Object &&
        !(value instanceof Array)) {
        displayValue = value[displayKey];
    }
    else {
        displayValue = value;
    }
    return (React.createElement(exports.StyledSelectCTA, { onClick: handleSelectCTAClick, disabled: disabled, style: style, block: block, theme: finalTheme },
        displayValue ? (React.createElement("span", { style: {
                whiteSpace: "nowrap",
                overflow: "hidden",
                textOverflow: "ellipsis"
            } }, displayValue)) : (React.createElement("span", { style: { color: finalTheme.GREY4 } }, placeholder)),
        showArrow ? (React.createElement(ArrowToggle, { theme: finalTheme, open: open })) : null));
};
var RadioOption = function (_a) {
    var value = _a.value, _b = _a.disabled, disabled = _b === void 0 ? false : _b, children = _a.children, handleSelect = _a.handleSelect, _c = _a.type, type = _c === void 0 ? "default" : _c, selectedValue = _a.selectedValue;
    return (React.createElement(StyledRadioOption, { value: value, disabled: disabled, onMouseDown: handleSelect, type: type },
        type != "label" && (React.createElement(radio_group_1.RadioIcon, { isActive: selectedValue && selectedValue.value === value },
            React.createElement("span", null))),
        children));
};
exports.SelectWrapper = styled_components_1.default.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n\t", ";\n\tmax-width: ", ";\n\tposition: relative;\n\tbackground-color: ", ";\n\toutline: none;\n\t", ";\n\t", ";\n"], ["\n\t", ";\n\tmax-width: ", ";\n\tposition: relative;\n\tbackground-color: ", ";\n\toutline: none;\n\t",
    ";\n\t",
    ";\n"])), app_1.GlobalStyles, function (_a) {
    var block = _a.block;
    return (block ? "100%" : "328px");
}, function (_a) {
    var theme = _a.theme;
    return theme.WHITE;
}, function (props) {
    return props.disabled && styled_components_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n\t\t\toutline: none;\n\t\t"], ["\n\t\t\toutline: none;\n\t\t"])));
}, function (props) {
    return props.error && styled_components_1.css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n\t\t\tborder-color: ", ";\n\t\t\t&:focus {\n\t\t\t\toutline-color: ", ";\n\t\t\t}\n\t\t"], ["\n\t\t\tborder-color: ", ";\n\t\t\t&:focus {\n\t\t\t\toutline-color: ", ";\n\t\t\t}\n\t\t"])), function (_a) {
        var theme = _a.theme;
        return theme.DANGER;
    }, function (_a) {
        var theme = _a.theme;
        return theme.DANGER;
    });
});
exports.StyledSelectCTA = styled_components_1.default.div(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n\tborder: 0;\n\tpadding: 8px 15px;\n\tborder: 1px solid ", ";\n\tborder-radius: 4px;\n\tcolor: ", ";\n\tmax-width: ", ";\n\tfont-size: 14px;\n\t&:hover {\n\t\tborder-color: ", ";\n\t\tcursor: pointer;\n\t}\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tbackground-color: ", ";\n\t", ";\n"], ["\n\tborder: 0;\n\tpadding: 8px 15px;\n\tborder: 1px solid ", ";\n\tborder-radius: 4px;\n\tcolor: ", ";\n\tmax-width: ", ";\n\tfont-size: 14px;\n\t&:hover {\n\t\tborder-color: ", ";\n\t\tcursor: pointer;\n\t}\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tbackground-color: ", ";\n\t",
    ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.GREY4;
}, function (_a) {
    var theme = _a.theme;
    return theme.GREY1;
}, function (_a) {
    var block = _a.block;
    return (block ? "100%" : "328px");
}, function (_a) {
    var theme = _a.theme;
    return theme.PRIMARY;
}, function (_a) {
    var theme = _a.theme;
    return theme.WHITE;
}, function (props) {
    return props.disabled && styled_components_1.css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n\t\t\tpointer-events: none;\n\t\t\topacity: 0.64;\n\t\t\tcursor: no-drop;\n\t\t\tbackground-color: ", ";\n\t\t\tcolor: ", ";\n\t\t\t&:focus {\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t\t::-webkit-input-placeholder {\n\t\t\t\t/* Chrome/Opera/Safari */\n\t\t\t\tcolor: ", ";\n\t\t\t}\n\t\t\t::-moz-placeholder {\n\t\t\t\t/* Firefox 19+ */\n\t\t\t\tcolor: ", ";\n\t\t\t}\n\t\t\t:-ms-input-placeholder {\n\t\t\t\t/* IE 10+ */\n\t\t\t\tcolor: ", ";\n\t\t\t}\n\t\t\t:-moz-placeholder {\n\t\t\t\t/* Firefox 18- */\n\t\t\t\tcolor: ", ";\n\t\t\t}\n\t\t\t::placeholder: {\n\t\t\t\tcolor: ", ";\n\t\t\t}\n\t\t"], ["\n\t\t\tpointer-events: none;\n\t\t\topacity: 0.64;\n\t\t\tcursor: no-drop;\n\t\t\tbackground-color: ", ";\n\t\t\tcolor: ", ";\n\t\t\t&:focus {\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t\t::-webkit-input-placeholder {\n\t\t\t\t/* Chrome/Opera/Safari */\n\t\t\t\tcolor: ", ";\n\t\t\t}\n\t\t\t::-moz-placeholder {\n\t\t\t\t/* Firefox 19+ */\n\t\t\t\tcolor: ", ";\n\t\t\t}\n\t\t\t:-ms-input-placeholder {\n\t\t\t\t/* IE 10+ */\n\t\t\t\tcolor: ", ";\n\t\t\t}\n\t\t\t:-moz-placeholder {\n\t\t\t\t/* Firefox 18- */\n\t\t\t\tcolor: ", ";\n\t\t\t}\n\t\t\t::placeholder: {\n\t\t\t\tcolor: ", ";\n\t\t\t}\n\t\t"])), props.theme.DISABLED, props.theme.GREY3, props.theme.GREY3, props.theme.GREY3, props.theme.GREY3, props.theme.GREY3, props.theme.GREY3);
});
var StyledRadioOption = styled_components_1.default.div(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n\tpadding: ", ";\n\tcolor: #354052;\n\tborder-bottom: 1px solid #e0e0e0;\n\tline-height: 30px;\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\t:last-child {\n\t\tborder-bottom: none;\n\t}\n"], ["\n\tpadding: ", ";\n\tcolor: #354052;\n\tborder-bottom: 1px solid #e0e0e0;\n\tline-height: 30px;\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\t:last-child {\n\t\tborder-bottom: none;\n\t}\n"])), function (props) { return (props.type === "label" ? "" : "20px"); });
// Select.Option = Option;
exports.default = React.memo(styled_components_1.withTheme(exports.Select));
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6;
//# sourceMappingURL=index.js.map