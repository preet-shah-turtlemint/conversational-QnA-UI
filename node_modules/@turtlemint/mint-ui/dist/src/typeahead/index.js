"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypeAhead = void 0;
var React = __importStar(require("react"));
var input_1 = __importDefault(require("../input"));
var use_debounce_1 = __importDefault(require("../hooks/use-debounce"));
var fetch_data_json_1 = __importDefault(require("../__utils/fetch-data-json"));
var dropdown_1 = __importDefault(require("../select/dropdown"));
var isEmpty_1 = __importDefault(require("lodash/fp/isEmpty"));
var validators_1 = require("@turtlemint/validators");
var styled_components_1 = __importDefault(require("styled-components"));
exports.TypeAhead = React.forwardRef(function (_a, ref) {
    var _b;
    var name = _a.name, data = _a.data, onChange = _a.onChange, onBlur = _a.onBlur, disabled = _a.disabled, _c = _a.block, block = _c === void 0 ? false : _c, style = _a.style, dropdownStyle = _a.dropdownStyle, _d = _a.validations, validations = _d === void 0 ? [] : _d, _e = _a.value, value = _e === void 0 ? (_b = {},
        _b[data.displayKey] = null,
        _b[data.valueKey] = null,
        _b) : _e;
    var _f = React.useState(value[data.displayKey] || ""), search = _f[0], setSearch = _f[1];
    var debouncedInput = use_debounce_1.default(search, 300);
    var _g = React.useState(value), selected = _g[0], setSelected = _g[1];
    var _h = React.useState([]), list = _h[0], setList = _h[1];
    var _j = React.useState(), openList = _j[0], setOpenList = _j[1];
    React.useEffect(function () {
        var _a;
        if (!search) {
            setSelected((_a = {},
                _a[data.displayKey] = null,
                _a[data.valueKey] = null,
                _a));
        }
    }, [search]);
    var _k = React.useState(false), loading = _k[0], setLoading = _k[1];
    React.useEffect(function () {
        if (debouncedInput && isEmpty_1.default(selected[data.valueKey])) {
            setLoading(true);
            if (data.searchKey) {
                data.params = {};
                data.params[data.searchKey] = debouncedInput;
            }
            // modify the params for updated debounced input
            fetch_data_json_1.default(__assign(__assign({}, data), { displayArrKey: data.displayKey, valueArrKey: data.valueKey })).then(function (response) {
                setList(response);
                setLoading(false);
                setOpenList(true);
            });
        }
    }, [debouncedInput, selected]);
    var valueRef = React.useRef();
    var handleSelect = function (option) {
        setSelected(option);
        // For Form Item capture
        onBlur ? onBlur(option) : null;
        valueRef.current = option;
        onChange ? onChange(option, name) : null;
    };
    React.useEffect(function () {
        if (selected[data.valueKey]) {
            setSearch(selected[data.displayKey]);
            setOpenList(false);
        }
    }, [selected]);
    var isValid = function (withMessage) {
        if (withMessage === void 0) { withMessage = false; }
        var validationObj = validators_1.validationHandler((selected || {})[data.valueKey || "value"] || "", validations);
        // updateValidationState({ ...validationObj });
        return withMessage ? validationObj : validationObj.isValid;
    };
    // Exposed public function for validation check
    React.useImperativeHandle(ref, function () { return ({
        isValid: isValid
    }); });
    var renderInput = function () {
        return (React.createElement(input_1.default, { key: -1, block: block, value: search, disabled: disabled, onChange: function (val) { return setSearch(val); }, placeholder: "Search...", onFocus: function () { return setOpenList(true); }, onBlur: function () {
                setOpenList(false);
                onBlur
                    ? onBlur(valueRef.current)
                    : null;
            }, error: false }));
    };
    var render = function () {
        var result = [];
        if (openList && !isEmpty_1.default(list) && search) {
            result.push(renderInput(), React.createElement(dropdown_1.default, { key: -2, loading: loading, onSelect: handleSelect, options: list, style: dropdownStyle, displayKey: data.displayKey, valueKey: data.valueKey }));
        }
        else {
            result.push(renderInput());
        }
        return result;
    };
    return (React.createElement(TypeAheadWrapper, { style: style, block: block }, render()));
});
var TypeAheadWrapper = styled_components_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n\tposition:relative\n\tmax-width: ", ";\n\toutline: none;\n"], ["\n\tposition:relative\n\tmax-width: ", ";\n\toutline: none;\n"])), function (_a) {
    var block = _a.block;
    return (block ? "100%" : "328px");
});
exports.default = exports.TypeAhead;
var templateObject_1;
//# sourceMappingURL=index.js.map