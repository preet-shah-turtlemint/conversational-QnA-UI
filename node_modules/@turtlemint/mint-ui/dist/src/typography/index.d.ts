import * as React from "react";
declare type TextSize = number;
declare const levelTuple: [1, 2, 3, 4, 5, 6];
declare type LevelType = typeof levelTuple[number];
declare type TextSpace = number;
declare const FontType: ["bold", "medium", "light", "normal"];
declare type WeightType = typeof FontType[number];
declare const textType: ["success", "danger", "warning", "info"];
declare type TextType = typeof textType[number];
declare type TextStyle = "uppercase" | "uppercase" | "capitalize";
export interface TypoProps {
    text: string;
    size?: TextSize;
    level?: LevelType;
    style?: React.CSSProperties;
    weight?: WeightType;
    textType?: TextType;
    ellipsis?: boolean;
    textStyle?: TextStyle;
    /** can be used for letter-spacing in px */
    textSpace?: TextSpace;
    color?: string;
}
export declare const Typography: {
    ({ text, size, style, level, weight, textType, textStyle, color }: TypoProps): JSX.Element;
    Title: ({ text, size, style, level, weight, textType, textStyle, color }: TypoProps) => JSX.Element;
    Text: ({ text, size, style, level, weight, textType, ellipsis, textStyle, textSpace, color }: TypoProps) => JSX.Element;
    Striked: ({ text, size, style, level, weight, textType, ellipsis, textStyle, textSpace, color }: TypoProps) => JSX.Element;
};
export declare const Title: ({ text, size, style, level, weight, textType, textStyle, color }: TypoProps) => JSX.Element;
export declare const Text: ({ text, size, style, level, weight, textType, ellipsis, textStyle, textSpace, color }: TypoProps) => JSX.Element;
export declare const Striked: ({ text, size, style, level, weight, textType, ellipsis, textStyle, textSpace, color }: TypoProps) => JSX.Element;
export default Typography;
